from database.requests import Func
from app.telethon import send_bulk
from aiogram import Bot
import aiocron
import asyncio
from config import ADMIN
import datetime

# async def scheduled_sender(bot: Bot):
#     config = await Func.get_config()

#     if not config or not config.is_active:
#         print("‚õîÔ∏è –†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥–∞")
#         return

#     groups = await Func.get_groups()
#     if not groups:
#         print("‚ö†Ô∏è –ù–µ—Ç –≥—Ä—É–ø–ø –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
#         return

#     result = await send_bulk(config, groups)

#     await bot.send_message(
#         chat_id= ADMIN,  # –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –æ—Ç—á—ë—Ç –≤ –õ–°
#         text=f"üì§ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n‚úÖ –£—Å–ø–µ—à–Ω–æ: {result['success']}\n‚ùå –û—à–∏–±–∫–∏: {result['failed']}"
#     )

# async def schedule_cron(bot: Bot):
#     config = await Func.get_config()
#     if not config or not config.time:
#         print("‚ö†Ô∏è –í—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ.")
#         return

#     hour, minute = map(int, config.time.split(':'))
#     cron_expr = f'{minute} {hour} * * *'

#     aiocron.crontab(cron_expr, func=lambda: asyncio.create_task(scheduled_sender(bot)))
#     print(f"üìÜ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ {hour:02}:{minute:02}")

async def run_scheduler(bot: Bot):
    while True:
        now = datetime.datetime.now().strftime("%H:%M")
        config = await Func.get_config()

        if config and config.is_active and config.time == now:
            groups = await Func.get_groups()

            if groups:
                result = await send_bulk(config, groups,bot)

                report_text = (
                    f"üì§ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n"
                    f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {result['success']}\n"
                    f"‚ùå –û—à–∏–±–∫–∏: {result['failed']}"
                )
            else:
                report_text = "‚ö†Ô∏è –ù–µ—Ç –≥—Ä—É–ø–ø –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏."

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
            admin_ids = ADMIN if isinstance(ADMIN, list) else [ADMIN]
            for admin_id in admin_ids:
                try:
                    await bot.send_message(admin_id, report_text)
                except Exception as e:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

            await asyncio.sleep(60)  # —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä–∏–ª–æ—Å—å –≤ —Ç—É –∂–µ –º–∏–Ω—É—Ç—É

        await asyncio.sleep(1)